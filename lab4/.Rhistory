all_rating <- c() # Создание пустого вектора
# Идем по годам
for (i in 2014:2022){
iter <- read_html(paste0("https://www.numbeo.com/quality-of-life/rankings_by_country.jsp?title=", toString(i)))
country_rat <- html_nodes(iter, select_rat) %>% html_text() %>% as.array() # Считали рейтинги
country_rat <- country_rat[-c(1,2,3)] # Убрали лишние из вектора
contry_rat <- matrix(country_rat, ncol = 11, nrow = 60, byrow = TRUE) # Создание матрицы
contry_rat <- contry_rat[,-c(11)] # Удаление пустого столбца
# Создание базы
rating <- data.frame(contry_rat)
names(rating) <- c("Страна", "Индекс качества жизни", "Индекс покупательной способности", "Индекс безопасности",
"Индекс здравоохранения", "Индекс стоимости жизни", "Соотношение цены на недвижимости к доходу",
"Индекс времени в пути в пробках", "Индекс загрезнения", "Климатический индекс")
all_rating <- list(all_rating, rating)
}
View(iter)
all_rating <- list() # Создание пустого вектора
# Идем по годам
for (i in 2014:2022){
iter <- read_html(paste0("https://www.numbeo.com/quality-of-life/rankings_by_country.jsp?title=", toString(i)))
country_rat <- html_nodes(iter, select_rat) %>% html_text() %>% as.array() # Считали рейтинги
country_rat <- country_rat[-c(1,2,3)] # Убрали лишние из вектора
contry_rat <- matrix(country_rat, ncol = 11, nrow = 60, byrow = TRUE) # Создание матрицы
contry_rat <- contry_rat[,-c(11)] # Удаление пустого столбца
# Создание базы
rating <- data.frame(contry_rat)
names(rating) <- c("Страна", "Индекс качества жизни", "Индекс покупательной способности", "Индекс безопасности",
"Индекс здравоохранения", "Индекс стоимости жизни", "Соотношение цены на недвижимости к доходу",
"Индекс времени в пути в пробках", "Индекс загрезнения", "Климатический индекс")
all_rating <- list(all_rating, rating)
}
select_rat <- "td" # Таблица рейтинга
# Идем по годам
for (i in 2014:2022){
iter <- read_html(paste0("https://www.numbeo.com/quality-of-life/rankings_by_country.jsp?title=", toString(i)))
country_rat <- html_nodes(iter, select_rat) %>% html_text() %>% as.array() # Считали рейтинги
country_rat <- country_rat[-c(1,2,3)] # Убрали лишние из вектора
contry_rat <- matrix(country_rat, ncol = 11, nrow = 60, byrow = TRUE) # Создание матрицы
contry_rat <- contry_rat[,-c(11)] # Удаление пустого столбца
# Создание базы
rating <- data.frame(contry_rat)
names(rating) <- c("Страна", "Индекс качества жизни", "Индекс покупательной способности", "Индекс безопасности",
"Индекс здравоохранения", "Индекс стоимости жизни", "Соотношение цены на недвижимости к доходу",
"Индекс времени в пути в пробках", "Индекс загрезнения", "Климатический индекс")
all_rating <- list(all_rating, rating)
}
View(all_rating)
select_rat <- "td" # Таблица рейтинга
all_rating <- list() # Создание пустого вектора
# Идем по годам
for (i in 2014:2022){
iter <- read_html(paste0("https://www.numbeo.com/quality-of-life/rankings_by_country.jsp?title=", toString(i)))
country_rat <- html_nodes(iter, select_rat) %>% html_text() %>% as.array() # Считали рейтинги
country_rat <- country_rat[-c(1,2,3)] # Убрали лишние из вектора
contry_rat <- matrix(country_rat, ncol = 11, nrow = 60, byrow = TRUE) # Создание матрицы
contry_rat <- contry_rat[,-c(11)] # Удаление пустого столбца
# Создание базы
rating <- data.frame(contry_rat)
names(rating) <- c("Страна", "Индекс качества жизни", "Индекс покупательной способности", "Индекс безопасности",
"Индекс здравоохранения", "Индекс стоимости жизни", "Соотношение цены на недвижимости к доходу",
"Индекс времени в пути в пробках", "Индекс загрезнения", "Климатический индекс")
all_rating[[length(all_rating)+i-2014]] <- rating
}
all_rating <- list() # Создание пустого вектора
# Идем по годам
for (i in 2014:2022){
iter <- read_html(paste0("https://www.numbeo.com/quality-of-life/rankings_by_country.jsp?title=", toString(i)))
country_rat <- html_nodes(iter, select_rat) %>% html_text() %>% as.array() # Считали рейтинги
country_rat <- country_rat[-c(1,2,3)] # Убрали лишние из вектора
contry_rat <- matrix(country_rat, ncol = 11, nrow = 60, byrow = TRUE) # Создание матрицы
contry_rat <- contry_rat[,-c(11)] # Удаление пустого столбца
# Создание базы
rating <- data.frame(contry_rat)
names(rating) <- c("Страна", "Индекс качества жизни", "Индекс покупательной способности", "Индекс безопасности",
"Индекс здравоохранения", "Индекс стоимости жизни", "Соотношение цены на недвижимости к доходу",
"Индекс времени в пути в пробках", "Индекс загрезнения", "Климатический индекс")
all_rating[[length(all_rating)+i-2014]] = rating
}
# Идем по годам
for (i in 2014:2022){
iter <- read_html(paste0("https://www.numbeo.com/quality-of-life/rankings_by_country.jsp?title=", toString(i)))
country_rat <- html_nodes(iter, select_rat) %>% html_text() %>% as.array() # Считали рейтинги
country_rat <- country_rat[-c(1,2,3)] # Убрали лишние из вектора
contry_rat <- matrix(country_rat, ncol = 11, nrow = 60, byrow = TRUE) # Создание матрицы
contry_rat <- contry_rat[,-c(11)] # Удаление пустого столбца
# Создание базы
rating <- data.frame(contry_rat)
names(rating) <- c("Страна", "Индекс качества жизни", "Индекс покупательной способности", "Индекс безопасности",
"Индекс здравоохранения", "Индекс стоимости жизни", "Соотношение цены на недвижимости к доходу",
"Индекс времени в пути в пробках", "Индекс загрезнения", "Климатический индекс")
all_rating[[length(all_rating)+i-2014]] = rating
}
all_rating[[length(all_rating)]] = rating
all_rating[[length(all_rating)+1]] = rating
all_rating <- list() # Создание пустого вектора
# Идем по годам
for (i in 2014:2022){
iter <- read_html(paste0("https://www.numbeo.com/quality-of-life/rankings_by_country.jsp?title=", toString(i)))
country_rat <- html_nodes(iter, select_rat) %>% html_text() %>% as.array() # Считали рейтинги
country_rat <- country_rat[-c(1,2,3)] # Убрали лишние из вектора
contry_rat <- matrix(country_rat, ncol = 11, nrow = 60, byrow = TRUE) # Создание матрицы
contry_rat <- contry_rat[,-c(11)] # Удаление пустого столбца
# Создание базы
rating <- data.frame(contry_rat)
names(rating) <- c("Страна", "Индекс качества жизни", "Индекс покупательной способности", "Индекс безопасности",
"Индекс здравоохранения", "Индекс стоимости жизни", "Соотношение цены на недвижимости к доходу",
"Индекс времени в пути в пробках", "Индекс загрезнения", "Климатический индекс")
all_rating[[length(all_rating)+1]] = rating
}
View(all_rating)
i
for(i in all_rating){
i
}
for(i in all_rating){
print i
}
for(i in all_rating){
print(i)
}
for(i in all_rating){
print(i)
}
all_rating <- list() # Создание пустоq список
years <- c() # Создали пустой вектор хранящий года
# Идем по годам
for (i in 2014:2022){
years <- c(years, toString(i))
iter <- read_html(paste0("https://www.numbeo.com/quality-of-life/rankings_by_country.jsp?title=", toString(i)))
country_rat <- html_nodes(iter, select_rat) %>% html_text() %>% as.array() # Считали рейтинги
country_rat <- country_rat[-c(1,2,3)] # Убрали лишние из вектора
contry_rat <- matrix(country_rat, ncol = 11, nrow = 60, byrow = TRUE) # Создание матрицы
contry_rat <- contry_rat[,-c(11)] # Удаление пустого столбца
# Создание базы
rating <- data.frame(contry_rat)
names(rating) <- c("Страна", "Индекс качества жизни", "Индекс покупательной способности", "Индекс безопасности",
"Индекс здравоохранения", "Индекс стоимости жизни", "Соотношение цены на недвижимости к доходу",
"Индекс времени в пути в пробках", "Индекс загрезнения", "Климатический индекс")
all_rating[[length(all_rating)+1]] = rating
}
names(all_rating) <- years # Присвоили года
View(all_rating)
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
rating_my <- rating[[,1]]
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
rating_my <- all_rating[[1]]
View(rating_my)
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
rating_my <- all_rating[[$2014]]
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
all_rating[,,1]
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
all_rating[1,,]
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
all_rating
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
all_rating[[1]][,1]
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
all_rating[[all_rating$`2014`]][,all_rating$`Страны`]
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
all_rating[[all_rating$`2014`]][,all_rating$`2014`$Страна]
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
all_rating[[]][,all_rating$`2014`$Страна]
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
all_rating[[1]][,all_rating$`2014`$Страна]
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
all_rating[[all_rating$`2014`]][,2014$Страна]
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
all_rating[[all_rating$`2014`]][,`2014`$Страна]
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
all_rating[[all_rating$`2014`]][,"Страна"]
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
all_rating[[all_rating$`2014`]][,select = "Страна"]
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
subset(all_rating[[all_rating$`2014`]][,1], Страна == "Canada", select = "Страна")
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
subset(all_rating[[1]][,1], Страна == "Canada", select = "Страна")
all_rating[[1]][,1]
View(all_rating)
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
subset(all_rating[[1]][,1], Страна == "Canada", select = 'Страна')
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
subset(all_rating[[1]][,1], Страна === 'Canada', select = 'Страна')
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
subset(all_rating[[1]][,1], Страна == 'Canada', select = 'Страна')
all_rating[[1]][,1]
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
subset(all_rating[[1]][,1], Страна == 'Canada', select = 'Canada')
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
subset(all_rating[[1]][,1], select = 'Canada')
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
subset(all_rating[[1]][,1], Canada = "Canada", select = 'Canada')
View(all_rating)
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
subset(all_rating[["2014"]][["Страна"]])
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
subset(all_rating[["2014"]][["Страна"]], Страна = "Canada", select = "Страна")
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
subset(all_rating[["2014"]][["Страна"]] == "Canada")
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
(all_rating[["2014"]][["Страна"]])
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
(all_rating[["2014"]][[,"Страна"]])
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
(all_rating[["2014"]][["Страна"],])
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
(all_rating[["2014"]][["Страна",]])
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
all_rating[["2014"]][[1,]]
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
all_rating[["2014"]][1,]
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
all_rating[["2014"]]["Страна" = "Canada"]
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
all_rating[["2014"]][all_rating$`2014`$Страна = "Canada"]
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
all_rating[["2014"]][all_rating$`2014`$Страна]
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
all_rating[["2014"]][all_rating$`2014`$Страна,]
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
all_rating[["2014"]][all_rating$`2014`$Страна,1]
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
all_rating[["2014"]][all_rating$`2014`$Страна == "Canada",]
for (i in 2014:2022){
all_rating[[toString(i)]][all_rating$`i`$Страна == "Canada",] # Выбрали индекс качества жизни определенной страны
}
for (i in 2014:2022){
all_rating[[toString(i)]][all_rating$`i`$Страна == "Canada",] # Выбрали индекс качества жизни определенной страны
}
for (i in 2014:2022){
print(all_rating[[toString(i)]][all_rating$`i`$Страна == "Canada",1]) # Выбрали индекс качества жизни определенной страны
}
all_rating[[toString(i)]][all_rating$`i`$Страна == "Canada",1] # Выбрали индекс качества жизни определенной страны
canada_life <- c(canada_life, all_rating[[toString(i)]][all_rating$`i`$Страна == "Canada",1]) # Выбрали индекс качества жизни определенной страны
canada_life <- c()
for (i in 2014:2022){
canada_life <- c(canada_life, all_rating[[toString(i)]][all_rating$`i`$Страна == "Canada",1]) # Выбрали индекс качества жизни определенной страны
}
for (i in 2014:2022){
canada_life <- c(canada_life, all_rating[[toString(i)]][all_rating[[toString(i)]][1,] == "Canada",1]) # Выбрали индекс качества жизни определенной страны
}
canada_life <- c(canada_life, all_rating[[toString(i)]][all_rating[[toString(i)]][,1] == "Canada",1]) # Выбрали индекс качества жизни определенной страны
canada_life <- c()
for (i in 2014:2022){
canada_life <- c(canada_life, all_rating[[toString(i)]][all_rating[[toString(i)]][,1] == "Canada",1]) # Выбрали индекс качества жизни определенной страны
}
for (i in 2014:2022){
canada_life <- c(canada_life, all_rating[[toString(i)]][all_rating[[toString(i)]][,] == "Canada",1]) # Выбрали индекс качества жизни определенной страны
}
canada_life <- c()
for (i in 2014:2022){
canada_life <- c(canada_life, all_rating[[toString(i)]][all_rating[[toString(i)]][,] == "Canada",1]) # Выбрали индекс качества жизни определенной страны
}
canada_life <- c(canada_life, all_rating[[toString(i)]][all_rating[[toString(i)]][1,] == "Canada",1]) # Выбрали индекс качества жизни определенной страны
canada_life <- c()
for (i in 2014:2022){
canada_life <- c(canada_life, all_rating[[toString(i)]][all_rating[[toString(i)]][1,] == "Canada",1]) # Выбрали индекс качества жизни определенной страны
}
canada_life <- c()
for (i in 2014:2022){
canada_life <- c(canada_life, all_rating[[toString(i)]][rownames(all_rating[[toString(i)]]) == "Canada",1]) # Выбрали индекс качества жизни определенной страны
}
# График изменения индекса качества жизни с 2014 года у каждой из 5 стран
all_rating[[2014]]
# График изменения индекса качества жизни с 2014 года у каждой из 5 стран
all_rating[[2014]][]
# График изменения индекса качества жизни с 2014 года у каждой из 5 стран
all_rating[[2014]][1,]
# График изменения индекса качества жизни с 2014 года у каждой из 5 стран
all_rating[['2014']][1,]
# График изменения индекса качества жизни с 2014 года у каждой из 5 стран
all_rating[['2014']][,1]
canada_life <- c(canada_life, all_rating[[toString(i)]][all_rating[[toString(i)]][,1] == "Canada",1]) # Выбрали индекс качества жизни определенной страны
canada_life <- c()
for (i in 2014:2022){
canada_life <- c(canada_life, all_rating[[toString(i)]][all_rating[[toString(i)]][,1] == "Canada",1]) # Выбрали индекс качества жизни определенной страны
}
canada_life <- c(canada_life, all_rating[[toString(i)]][all_rating[[toString(i)]][,1] == "Canada",2]) # Выбрали индекс качества жизни определенной страны
canada_life <- c()
for (i in 2014:2022){
canada_life <- c(canada_life, all_rating[[toString(i)]][all_rating[[toString(i)]][,1] == "Canada",2]) # Выбрали индекс качества жизни определенной страны
}
canada_life
index_life <- list()
iter <- c()
for(country in my_country){
for (year in 2014:2022){
iter <- c(iter, all_rating[[toString(year)]][all_rating[[toString(year)]][,1] == country,2])# Выбрали индекс качества жизни определенной страны
}
append(index_life,iter)
}
# Канада, США, Турция, Греция, Дания - мои страны
my_country <- c("Canada", "United States", "Turkey", "Greece", "Denmark")
for(country in my_country){
for (year in 2014:2022){
iter <- c(iter, all_rating[[toString(year)]][all_rating[[toString(year)]][,1] == country,2])# Выбрали индекс качества жизни определенной страны
}
append(index_life,iter)
}
index_life <- list()
iter <- c()
for(country in my_country){
for (year in 2014:2022){
iter <- c(iter, all_rating[[toString(year)]][all_rating[[toString(year)]][,1] == country,2])# Выбрали индекс качества жизни определенной страны
}
index_life[length(index_life)+1] = iter
}
for(country in my_country){
for (year in 2014:2022){
iter <- c(iter, all_rating[[toString(year)]][all_rating[[toString(year)]][,1] == country,2])# Выбрали индекс качества жизни определенной страны
}
index_life[[length(index_life)+1]] = iter
}
View(index_life)
index_life <- list()
iter <- c()
for(country in my_country){
for (year in 2014:2022){
iter <- c(iter, all_rating[[toString(year)]][all_rating[[toString(year)]][,1] == country,2])# Выбрали индекс качества жизни определенной страны
}
index_life[[length(index_life)+1]] = iter
}
View(index_life)
index_life <- list() # список индексов по каждой стране
names(index_life) <- my_country # Присвоили года
index_life <- list() # список индексов по каждой стране
iter <- c()
for(country in my_country){
for (year in 2014:2022){
iter <- c(iter, all_rating[[toString(year)]][all_rating[[toString(year)]][,1] == country,2])# Выбрали индекс качества жизни определенной страны
}
index_life[[length(index_life)+1]] = iter
}
names(index_life) <- my_country # Присвоили имена стран
View(index_life)
index_life[[1]]
index_life[[2]]
index_life <- list() # список индексов по каждой стране
for(country in my_country){
iter <- c()
for (year in 2014:2022){
iter <- c(iter, all_rating[[toString(year)]][all_rating[[toString(year)]][,1] == country,2])# Выбрали индекс качества жизни определенной страны
}
index_life[[length(index_life)+1]] = iter
}
View(index_life)
names(index_life) <- my_country # Присвоили имена стран
index_life[[2]]
# График изменения индекса качества жизни с 2014 года у каждой из 5 стран
plot(years, index_life[[1]], type='o', lty=1, pch=20, col='brown', cex = 3,
main='Тенденции изменения количества призовых мест(1-3)',
xlab='Четыре последние летние олимпиады',
ylab='Число медалей',
ylim=c(25, 121))
# График изменения индекса качества жизни с 2014 года у каждой из 5 стран
plot(index_life[[1]], type='o', lty=1, pch=20, col='brown', cex = 3,
main='Тенденции изменения количества призовых мест(1-3)',
xlab='Четыре последние летние олимпиады',
ylab='Число медалей',
ylim=c(25, 121))
# График изменения индекса качества жизни с 2014 года у каждой из 5 стран
plot(index_life[1], type='o', lty=1, pch=20, col='brown', cex = 3,
main='Тенденции изменения количества призовых мест(1-3)',
xlab='Четыре последние летние олимпиады',
ylab='Число медалей',
ylim=c(25, 121))
index_life[1]
names(index_life[1])
# График изменения индекса качества жизни с 2014 года у каждой из 5 стран
plot(names(index_life[1]),index_life[1], type='o', lty=1, pch=20, col='brown', cex = 3,
main='Тенденции изменения количества призовых мест(1-3)',
xlab='Четыре последние летние олимпиады',
ylab='Число медалей',
ylim=c(25, 121))
# График изменения индекса качества жизни с 2014 года у каждой из 5 стран
plot(years,index_life[1], type='o', lty=1, pch=20, col='brown', cex = 3,
main='Тенденции изменения количества призовых мест(1-3)',
xlab='Четыре последние летние олимпиады',
ylab='Число медалей',
ylim=c(25, 121))
years
index_life[1]
# График изменения индекса качества жизни с 2014 года у каждой из 5 стран
plot(years,index_life[1], type='o', lty=1, pch=20, col='brown', cex = 3,
main='Тенденции изменения количества призовых мест(1-3)',
xlab='Четыре последние летние олимпиады',
ylab='Число медалей',
ylim=c(25, 121))
lenght(index_life[1])
lenght(index_life[[1]])
length(index_life[1])
length(index_life[[1]])
# График изменения индекса качества жизни с 2014 года у каждой из 5 стран
plot(years,index_life[[1]], type='o', lty=1, pch=20, col='brown', cex = 3,
main='Тенденции изменения количества призовых мест(1-3)',
xlab='Четыре последние летние олимпиады',
ylab='Число медалей',
ylim=c(25, 121))
# График изменения индекса качества жизни с 2014 года у каждой из 5 стран
plot(years,index_life[[1]], type='o', lty=1, pch=20, col='brown', cex = 3,
main='Тенденции изменения количества призовых мест(1-3)',
xlab='Четыре последние летние олимпиады',
ylab='Число медалей',)
lines(years, index_life[[2]], type='o', lty=1, pch=10, col='green',cex = 3,)
lines(years, index_life[[3]], type='o', lty=1, pch=15, col='red',cex = 3)
lines(years, index_life[[4]], type='o', lty=1, pch=17, col='blue',cex = 3)
lines(years, index_life[[5]], type='o', lty=1, pch=18, col='black',cex = 3)
# График изменения индекса качества жизни с 2014 года у каждой из 5 стран
plot(years,index_life[[1]], type='o', lty=1, pch=20, col='red', cex = 3,
main='Тенденции изменения качества жизни',
xlab='Четыре последние летние олимпиады',
ylab='Число медалей',)
lines(years, index_life[[2]], type='o', lty=1, pch=10, col='green',cex = 3,)
lines(years, index_life[[3]], type='o', lty=1, pch=15, col='red',cex = 3)
lines(years, index_life[[4]], type='o', lty=1, pch=17, col='blue',cex = 3)
lines(years, index_life[[5]], type='o', lty=1, pch=18, col='black',cex = 3)
# График изменения индекса качества жизни с 2014 года у каждой из 5 стран
plot(years,index_life[[1]], type='o', lty=1, pch=20, col='red', cex = 3,
main='Тенденции изменения качества жизни',
xlab='Четыре последние летние олимпиады',
ylab='Число медалей')
lines(years, index_life[[2]], type='o', lty=1, pch=10, col='green',cex = 3,)
lines(years, index_life[[3]], type='o', lty=1, pch=15, col='red',cex = 3)
lines(years, index_life[[4]], type='o', lty=1, pch=17, col='blue',cex = 3)
lines(years, index_life[[5]], type='o', lty=1, pch=18, col='black',cex = 3)
View(index_life)
# График изменения индекса качества жизни с 2014 года у каждой из 5 стран
plot(years,index_life[[1]], type='o', lty=1, pch=20, col='brown', cex = 3,
main='Тенденции изменения качества жизни',
xlab='Четыре последние летние олимпиады',
ylab='Число медалей')
lines(years, index_life[[2]], type='o', lty=1, pch=10, col='green',cex = 3,)
lines(years, index_life[[3]], type='o', lty=1, pch=15, col='red',cex = 3)
lines(years, index_life[[4]], type='o', lty=1, pch=17, col='blue',cex = 3)
lines(years, index_life[[5]], type='o', lty=1, pch=18, col='black',cex = 3)
legend('topright', my_country,
pch=c(20,10,15,17,18,12,13), lty=c(1,1,1,1,1,1,1),
col=c('brown', 'green', 'red', 'blue', 'black', 'yellow', 'purple'),
y.intersp = 1, text.width = 2)
legend('topright', my_country,
pch=c(20,10,15,17,18,12,13), lty=c(1,1,1,1,1,1,1),
col=c('brown', 'green', 'red', 'blue', 'black'),
y.intersp = 1, text.width = 2)
# График изменения индекса качества жизни с 2014 года у каждой из 5 стран
plot(years,index_life[[1]], type='o', lty=1, pch=20, col='brown', cex = 3,
main='Тенденции изменения качества жизни',
xlab='Четыре последние летние олимпиады',
ylab='Число медалей', ylim(100,230))
# График изменения индекса качества жизни с 2014 года у каждой из 5 стран
plot(years,index_life[[1]], type='o', lty=1, pch=20, col='brown', cex = 3,
main='Тенденции изменения качества жизни',
xlab='Четыре последние летние олимпиады',
ylab='Число медалей', ylim = c(100,230))
lines(years, index_life[[2]], type='o', lty=1, pch=10, col='green',cex = 3,)
lines(years, index_life[[3]], type='o', lty=1, pch=15, col='red',cex = 3)
lines(years, index_life[[4]], type='o', lty=1, pch=17, col='blue',cex = 3)
lines(years, index_life[[5]], type='o', lty=1, pch=18, col='black',cex = 3)
legend('topright', my_country,
pch=c(20,10,15,17,18,12,13), lty=c(1,1,1,1,1,1,1),
col=c('brown', 'green', 'red', 'blue', 'black'),
y.intersp = 1, text.width = 2)
# График изменения индекса качества жизни с 2014 года у каждой из 5 стран
plot(years,index_life[[1]], type='o', lty=1, pch=20, col='brown', cex = 3,
main='Тенденции изменения качества жизни',
xlab='Четыре последние летние олимпиады',
ylab='Число медалей', ylim = c(80,230))
lines(years, index_life[[2]], type='o', lty=1, pch=10, col='green',cex = 3,)
lines(years, index_life[[3]], type='o', lty=1, pch=15, col='red',cex = 3)
lines(years, index_life[[4]], type='o', lty=1, pch=17, col='blue',cex = 3)
lines(years, index_life[[5]], type='o', lty=1, pch=18, col='black',cex = 3)
legend('topright', my_country,
pch=c(20,10,15,17,18,12,13), lty=c(1,1,1,1,1,1,1),
col=c('brown', 'green', 'red', 'blue', 'black'),
y.intersp = 1, text.width = 2)
