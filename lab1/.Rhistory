# В отличие от чисел, конкатенация производится не оператором +,
# а специальной функцией paste().
s1 = "В историю трудно войти,"
s2 = "но легко вляпаться"
s1
s2
s = paste(s1, s2); s
s<-s1+s2; s
strsplit(s,",")
x<-2
cat(x)
print(x)
#-------------------------
c<-cat(hello)
x<-5
x<-5
df <- data.frame(var1=c(11,21,31), var2=c(12,22,32), var3=c(13,23,33), var4=c(14,24,34), row.names=c("case1", "case2", "case3"))
df
View(df)
#Теперь рассмотрим матрицы. Что получится после выполнения команд?
x <-1:12
dim(x)<-c(3,4); x # dim сокращение от dimention
x[2,3]
print(x[-c(2,3,10)])
#1.1. Выбрать значения var1, var2, var3 для case1.
x[c(1,4,7)]
#1.1. Выбрать значения var1, var2, var3 для case1.
df[c(1,4,7)]
#1.1. Выбрать значения var1, var2, var3 для case1.
df[case,c(1,4,7)]
#1.1. Выбрать значения var1, var2, var3 для case1.
df[case1,c(1,4,7)]
#1.1. Выбрать значения var1, var2, var3 для case1.
df[var1,var2,var3]
#1.1. Выбрать значения var1, var2, var3 для case1.
df[case1]
#1.1. Выбрать значения var1, var2, var3 для case1.
df[c(case1)]
#1.1. Выбрать значения var1, var2, var3 для case1.
df[c("case1")]
#1.1. Выбрать значения var1, var2, var3 для case1.
df[c("case1",var1)]
#1.1. Выбрать значения var1, var2, var3 для case1.
df[var1,c("case1")]
#1.1. Выбрать значения var1, var2, var3 для case1.
df[[1]]
#1.1. Выбрать значения var1, var2, var3 для case1.
df[[1,2,3]]
#1.1. Выбрать значения var1, var2, var3 для case1.
df[[c(1,2,3)]]
df
#1.1. Выбрать значения var1, var2, var3 для case1.
df[["case1"]]
#1.1. Выбрать значения var1, var2, var3 для case1.
df[["case1"]]
#1.1. Выбрать значения var1, var2, var3 для case1.
df[[case1]]
#1.1. Выбрать значения var1, var2, var3 для case1.
df[c(1,2,3)]
#1.1. Выбрать значения var1, var2, var3 для case1.
df[c(1,2,3),"case1"]
#1.1. Выбрать значения var1, var2, var3 для case1.
df["case1",c(1,2,3)]
#Выбрать значения всех переменных для case2, которые больше 22.
df["case2"]
#Выбрать значения всех переменных для case2, которые больше 22.
df["case2",c(1,2,3,4)]
#Выбрать значения всех переменных для case2, которые больше 22.
df["case2",c(1,2,3,4,5)]
#1.1. Выбрать значения var1, var2, var3 для case1.
df["case1",c(1,2,3)]
#Выбрать значения всех переменных для case2, которые больше 22.
for (i in df["case2",c(1,2,3,4)]){
if(i > 22) print i
}
#Выбрать значения всех переменных для case2, которые больше 22.
for (i in df["case2",c(1,2,3,4)]){
if(i > 22) {
print i
}
}
{
if(i > 22) {
print i
}
}
df <- data.frame(var1=c(11,21,31), var2=c(12,22,32), var3=c(13,23,33), var4=c(14,24,34), row.names=c("case1", "case2", "case3"))
#Выбрать значения всех переменных для case2, которые больше 22.
for (i in df["case2",c(1,2,3,4)]){
print i
}
for (i in df["case2",c(1,2,3,4)]){
print i
}
#1.2. Выбрать имена переменных для колонок 1 и 3.
#1.3. Добавить колонку с именем Y и значениями -1, 0, 1.
#1.4. Удалить строку case2.
#1.5. Значения второй колонки возвести в третью степень.
df$var2 <- df$var2 ^ 3
df <- data.frame(var1=c(11,21,31), var2=c(12,22,32), var3=c(13,23,33), var4=c(14,24,34), row.names=c("case1", "case2", "case3"))
#1.2. Выбрать имена переменных для колонок 1 и 3.
#1.3. Добавить колонку с именем Y и значениями -1, 0, 1.
#1.4. Удалить строку case2.
#1.5. Значения второй колонки возвести в третью степень.
df$var2 <- df$var2 ^ 3
#1.2. Выбрать имена переменных для колонок 1 и 3.
#1.3. Добавить колонку с именем Y и значениями -1, 0, 1.
df[["Y"]] <- c(-1,0,1)
df
df[1]
df[[1]]
df[1]
df["case1"]
df["case1",]
#1.4. Удалить строку case2.
df<--df["case2",]
df
df <- data.frame(var1=c(11,21,31), var2=c(12,22,32), var3=c(13,23,33), var4=c(14,24,34), row.names=c("case1", "case2", "case3"))
df
#1.4. Удалить строку case2.
df<--df["case2",]
df
df <- data.frame(var1=c(11,21,31), var2=c(12,22,32), var3=c(13,23,33), var4=c(14,24,34), row.names=c("case1", "case2", "case3"))
df
#1.4. Удалить строку case2.
df<-df["case2",]
df
df <- data.frame(var1=c(11,21,31), var2=c(12,22,32), var3=c(13,23,33), var4=c(14,24,34), row.names=c("case1", "case2", "case3"))
df
#1.4. Удалить строку case2.
df<- df[-"case2",]
df
#1.4. Удалить строку case2.
df<- df[-("case2"),]
#1.4. Удалить строку case2.
df<- df[-("case2"),]
df
#1.4. Удалить строку case2.
df<- df[-"case2",]
#1.4. Удалить строку case2.
df<- -df["case2",]
df
df <- data.frame(var1=c(11,21,31), var2=c(12,22,32), var3=c(13,23,33), var4=c(14,24,34), row.names=c("case1", "case2", "case3"))
#1.4. Удалить строку case2.
-df["case2",]
df
#1.4. Удалить строку case2.
-df["case2",]
#1.4. Удалить строку case2.
df[-"case2",]
#1.4. Удалить строку case2.
df["-case2",]
df
#1.4. Удалить строку case2.
df[c(-"case2"),]
#1.4. Удалить строку case2.
df[-c("case2"),]
#1.4. Удалить строку case2.
df[c("case1","case2"),]
#1.4. Удалить строку case2.
df<- df[c("case1","case3"),]
#1.5. Значения второй колонки возвести в третью степень.
df$var2 <- df$var2 ^ 3
#1.4. Удалить строку case2.
df<- df[c("case1","case3"),]
df
#1.2. Выбрать имена переменных для колонок 1 и 3.
colnames( df ) <- c("First" , "Three" )
df
#1.2. Выбрать имена переменных для колонок 1 и 3.
colnames( df ) <- c("First" , "var2","Three","var4" )
df
#16.	Создать матрицу matr [m,n]. Значения m и n ввести с клавиатуры.
#Присвоить имена срокам и столбцам.
#Сформировать субматирцу из четных строк.
#Найти вектор максимальных элементов столбцов матрицы.
n <- readline(prompt = "Введите значение n: ")
m <- readline(prompt = "Введите значение m: ")
matr <- matrix(0, nrow = n, ncol = m)
m <- as.integer(readline(prompt = "Введите значение m: "))
#16.	Создать матрицу matr [m,n]. Значения m и n ввести с клавиатуры.
#Присвоить имена срокам и столбцам.
#Сформировать субматирцу из четных строк.
#Найти вектор максимальных элементов столбцов матрицы.
n <- as.integer(readline(prompt = "Введите значение n: "))
matr <- matrix(0, nrow = n, ncol = m)
#16.	Создать матрицу matr [m,n]. Значения m и n ввести с клавиатуры.
#Присвоить имена срокам и столбцам.
#Сформировать субматирцу из четных строк.
#Найти вектор максимальных элементов столбцов матрицы.
n <- as.integer(readline(prompt = "Введите значение n: "))
matr <- matrix(0, nrow = n, ncol = m)
matr <- matrix(0..100, nrow = n, ncol = m)
matr <- matrix(0:100, nrow = n, ncol = m)
matr <- matrix(data = rexp(200, rate = 10), nrow = n, ncol = m)
matr <- matrix(data = rexp(200), nrow = n, ncol = m)
matr <- matrix(data = rexp(200, rate = .1), nrow = n, ncol = m)
matr <- matrix(data = rexp(200, rate = .0), nrow = n, ncol = m)
matr <- matrix(data = rexp(200, rate = 1), nrow = n, ncol = m)
matr
#Присвоить имена строкам и столбцам.
colnames(m1) <- c("A", "B", "C", "D","E")
#Присвоить имена строкам и столбцам.
colnames(matr) <- c("A", "B", "C", "D","E")
rownames(matr) <- c("r1", "r2", "r3","r4","r5")
matr
#Сформировать субматирцу из четных строк.
seq(1,n,2)
#Сформировать субматирцу из четных строк.
seq(2,n,2)
#Сформировать субматирцу из четных строк.
matr[seq(2,n,2),]
print(1)
#Найти вектор максимальных элементов столбцов матрицы.
for (i in n){
for (j in m){
print(1)
}
}
for (i in n){
for (j in m){
print(1)
}
}
for (i in n){
for (j in m){
i
}
}
i
#Найти вектор максимальных элементов столбцов матрицы.
which.max(matr[1],)
#Найти вектор максимальных элементов столбцов матрицы.
which.max(matr[1,])
#Найти вектор максимальных элементов столбцов матрицы.
matr
append(y,1)
y
max_vect <- vector()
append(max_vect,1)
max_vect
append(max_vect,2)
max_vect
max_vect <- numeric()
append(max_vect,2)
#16.	Создать матрицу matr [m,n]. Значения m и n ввести с клавиатуры.
n <- as.integer(readline(prompt = "Введите значение n: "))
vector <- c(vector,2)
View(vector)
vector <- c(vector,1)
vector
which.max(matr[,i])
for (i in m){
which.max(matr[,i])
}
for (i in m){
which.max(matr[,i])
}
which.max(matr[,i])
which.max(matr[,1])
which.max(matr[,2])
#Найти вектор максимальных элементов столбцов матрицы.
matr
#16.	Создать матрицу matr [m,n]. Значения m и n ввести с клавиатуры.
which.max(matr[,2])
which.max(matr[,3])
vector<-which.max(matr[,3])
vector
matr[which.max(as.numeric(do.call(rbind, matr)[,2]))]
colMax(matr)
colMax <- function(data) sapply(data, max, na.rm = TRUE)
colMax(matr)
#Найти вектор максимальных элементов столбцов матрицы.
matr
colMax(matr)
apply(matr, 2, function(x) max(x, na.rm = TRUE))
