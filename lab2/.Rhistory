}
count_score
count_score <- vector()
for(i in 1:ncol(food)){
count_score[i] <- length(food[food[,i] > 7]) + length(food[food[,i] < 3])
}
count_score
View(food)
for(i in 1:ncol(food)){
food[,i]
count_score[i] <- length(food[food[,i] > 7]) + length(food[food[,i] < 3])
}
food[,1]
for(i in 1:ncol(food)){
count_score[i] <- length(food[food[,i] > 7]) # + length(food[food[,i] < 3])
}
count_score
length(food[food[,1] > 7])
length(food[food[,1] > 8])
length(food[food[,1] > 11])
length(food[food[,1] > 1])
length(food[food[,1] > 7])
length(food[food[,1] > 6])
length(food[food[,1] > 8])
View(food)
length(food[food[1,] > 8])
food[food[1,] > 8]
food
food[,1]
food[,7]
food[,8]
food[,9]
food[food[,9] > 7]
food <- read.xlsx("C:/Users/kosty/OneDrive/Рабочий стол/3 курс 6 семест/Обработка больших данных/Practical R/lab2/food.xlsx", sheetIndex = 1)
rownames(food)<-food[,1]
name <- food[,1]
food_name<- colnames(food)
food<-food[,-1] #удаляем имена
colMax <- function(data) sapply(data, max, na.rm = TRUE) # Функция макс в каждом столбце
colMin <- function(data) sapply(data, min, na.rm = TRUE) # Функция мин в каждом столбце
colMean <- function(data) sapply(data, mean, na.rm = TRUE) # Функция среднего в каждом столбце
colMax(food) # Максимальная оценка
colMin(food) # Минимальная оценка
colMean(food) # Средняя оценка
count_score <- vector()
food
food[food[,9]]
food[,9]>9
sum(food[,9]>9)
count_score[i] <- sum(food[,i] > 7) + sum(food[,i] < 3)
count_score <- vector()
for(i in 1:ncol(food)){
count_score[i] <- sum(food[,i] > 7) + sum(food[,i] < 3)
}
count_score
rbind(food_name, count_score)
food<-food[,-1] #удаляем имена
rbind(food_name, count_score)
count_score
rbind(food_name, count_score)
count_score <- vector()
for(i in 1:ncol(food)){
count_score[i] <- sum(food[,i] > 7) + sum(food[,i] < 3)
}
count_score
rbind(food_name, count_score)
food_name<- colnames(food)
rbind(food_name, count_score)
food <- read.xlsx("C:/Users/kosty/OneDrive/Рабочий стол/3 курс 6 семест/Обработка больших данных/Practical R/lab2/food.xlsx", sheetIndex = 1)
rownames(food)<-food[,1]
name <- food[,1]
food<-food[,-1] #удаляем имена
food_name<- colnames(food)
rbind(food_name, count_score)
count_score <- vector()
for(i in 1:ncol(food)){
count_score[i] <- sum(food[,i] > 7) + sum(food[,i] < 3)
}
count_score
rbind(food_name, count_score)
source("C:/Users/kosty/OneDrive/Рабочий стол/3 курс 6 семест/Обработка больших данных/Practical R/lab2/lab2.R")
install.packages("xlsx", dep = T)
library("xlsx")
food <- read.xlsx("C:/Users/kosty/OneDrive/Рабочий стол/3 курс 6 семест/Обработка больших данных/Practical R/lab2/food.xlsx", sheetIndex = 1)
rownames(food)<-food[,1]
name <- food[,1]
food<-food[,-1] #удаляем имена
food_name<- colnames(food)
library("xlsx")
food <- read.xlsx("C:/Users/kosty/OneDrive/Рабочий стол/3 курс 6 семест/Обработка больших данных/Practical R/lab2/food.xlsx", sheetIndex = 1)
View(food)
rownames(food)<-food[,1]
name <- food[,1]
food<-food[,-1] #удаляем имена
food_name<- colnames(food)
colMax <- function(data) sapply(data, max, na.rm = TRUE) # Функция макс в каждом столбце
colMin <- function(data) sapply(data, min, na.rm = TRUE) # Функция мин в каждом столбце
colMean <- function(data) sapply(data, mean, na.rm = TRUE) # Функция среднего в каждом столбце
colMax(food) # Максимальная оценка
colMin(food) # Минимальная оценка
colMean(food) # Средняя оценка
count_score <- vector()
for(i in 1:ncol(food)){
count_score[i] <- sum(food[,i] > 7) + sum(food[,i] < 3)
}
count_score
rbind(food_name, count_score) # количество людей, отдавших предпочтение >0.7 и <0.3 для каждого блюда
sort(colMean(food),decreasing = TRUE) # рейтинг
# столбчатая диаграмма оценок
barplot(height = colMean(food),col = "steelblue",
xlab = "Еда",
ylab = "Средняя оценка",
)
# столбчатая диаграмма оценок
barplot(height = colMean(food),col = "steelblue",
xlab = "Еда",
ylab = "Средняя оценка",
)
library("xlsx")
food <- read.xlsx("C:/Users/kosty/OneDrive/Рабочий стол/3 курс 6 семест/Обработка больших данных/Practical R/lab2/food.xlsx", sheetIndex = 1)
rownames(food)<-food[,1]
name <- food[,1]
food<-food[,-1] #удаляем имена
food_name<- colnames(food)
colMax <- function(data) sapply(data, max, na.rm = TRUE) # Функция макс в каждом столбце
colMin <- function(data) sapply(data, min, na.rm = TRUE) # Функция мин в каждом столбце
colMean <- function(data) sapply(data, mean, na.rm = TRUE) # Функция среднего в каждом столбце
colMax(food) # Максимальная оценка
colMin(food) # Минимальная оценка
colMean(food) # Средняя оценка
count_score <- vector()
for(i in 1:ncol(food)){
count_score[i] <- sum(food[,i] > 7) + sum(food[,i] < 3)
}
count_score
rbind(food_name, count_score) # количество людей, отдавших предпочтение >0.7 и <0.3 для каждого блюда
sort(colMean(food),decreasing = TRUE) # рейтинг
count_score <- vector()
for(i in 1:ncol(food)){
count_score[i] <- sum(food[,i] > 7)
}
count_score
rbind(food_name, count_score) # количество людей, отдавших предпочтение >0.7 и <0.3 для каждого блюда
count_score_high
count_score_high <- vector()
for(i in 1:ncol(food)){
count_score_high[i] <- sum(food[,i] > 7)
}
count_score_high
rbind(food_name, count_score_high) # количество людей, отдавших предпочтение >3
count_score_low <- vector()
for(i in 1:ncol(food)){
count_score_low[i] <- sum(food[,i] > 7)
}
count_score_low
count_score_low <- vector()
for(i in 1:ncol(food)){
count_score_low[i] <- sum(food[,i] < 3)
}
count_score_low
rbind(food_name, count_score_low) # количество людей, отдавших предпочтение <3
sort(colMean(food),decreasing = TRUE) # рейтинг
source("C:/Users/kosty/OneDrive/Рабочий стол/3 курс 6 семест/Обработка больших данных/Practical R/lab2/lab2.R")
# столбчатая диаграмма оценок
barplot(height = colMean(food),col = "steelblue",
xlab = "Еда",
ylab = "Средняя оценка",
)
food <- read.xlsx("C:/Users/kosty/OneDrive/Рабочий стол/3 курс 6 семест/Обработка больших данных/Practical R/lab2/food.xlsx", sheetIndex = 1)
library("xlsx")
food <- read.xlsx("C:/Users/kosty/OneDrive/Рабочий стол/3 курс 6 семест/Обработка больших данных/Practical R/lab2/food.xlsx", sheetIndex = 1)
rownames(food)<-food[,1]
name <- food[,1]
food<-food[,-1] #удаляем имена
food_name<- colnames(food)
colMax <- function(data) sapply(data, max, na.rm = TRUE) # Функция макс в каждом столбце
colMin <- function(data) sapply(data, min, na.rm = TRUE) # Функция мин в каждом столбце
colMean <- function(data) sapply(data, mean, na.rm = TRUE) # Функция среднего в каждом столбце
colMax(food) # Максимальная оценка
colMin(food) # Минимальная оценка
colMean(food) # Средняя оценка
count_score_high <- vector()
for(i in 1:ncol(food)){
count_score_high[i] <- sum(food[,i] > 7)
}
count_score_high
rbind(food_name, count_score_high) # количество людей, отдавших предпочтение >3
count_score_low <- vector()
for(i in 1:ncol(food)){
count_score_low[i] <- sum(food[,i] < 3)
}
count_score_low
rbind(food_name, count_score_low) # количество людей, отдавших предпочтение <3
sort(colMean(food),decreasing = TRUE) # рейтинг
# столбчатая диаграмма оценок
barplot(height = colMean(food),col = "steelblue",
xlab = "Еда",
ylab = "Средняя оценка",
)
food <- read.xlsx("C:/Users/kosty/OneDrive/Рабочий стол/3 курс 6 семест/Обработка больших данных/Practical R/lab2/food.xlsx", sheetIndex = 1)
rownames(food)<-food[,1]
name <- food[,1]
food<-food[,-1] #удаляем имена
food_name<- colnames(food)
colMax <- function(data) sapply(data, max, na.rm = TRUE) # Функция макс в каждом столбце
colMin <- function(data) sapply(data, min, na.rm = TRUE) # Функция мин в каждом столбце
colMean <- function(data) sapply(data, mean, na.rm = TRUE) # Функция среднего в каждом столбце
colMax(food) # Максимальная оценка
colMin(food) # Минимальная оценка
colMean(food) # Средняя оценка
count_score_high <- vector()
for(i in 1:ncol(food)){
count_score_high[i] <- sum(food[,i] > 7)
}
count_score_high
rbind(food_name, count_score_high) # количество людей, отдавших предпочтение >3
count_score_low <- vector()
count_score_low[i] <- sum(food[,i] < 3)
for(i in 1:ncol(food)){
count_score_low[i] <- sum(food[,i] < 3)
}
count_score_low
rbind(food_name, count_score_low) # количество людей, отдавших предпочтение <3
sort(colMean(food),decreasing = TRUE) # рейтинг
# столбчатая диаграмма оценок
barplot(height = colMean(food),col = "steelblue",
xlab = "Еда",
ylab = "Средняя оценка",
)
# столбчатая диаграмма оценок
barplot(height = colMean(food),col = "steelblue",
xlab = "Еда",
ylab = "Средняя оценка",
legend.text = name
)
# столбчатая диаграмма оценок
barplot(height = colMean(food),
xlab = "Еда",
ylab = "Средняя оценка",
legend.text = name
)
source("C:/Users/kosty/OneDrive/Рабочий стол/3 курс 6 семест/Обработка больших данных/Practical R/lab2/lab2.R")
# столбчатая диаграмма оценок
barplot(height = colMean(food),
xlab = "Еда",
ylab = "Средняя оценка",
legend.text = names(food[1,])
)
# столбчатая диаграмма оценок
barplot(height = colMean(food),
xlab = "Еда",
ylab = "Средняя оценка",
legend.text = names(food[1,])
)
# столбчатая диаграмма оценок
barplot(height = colMean(food),
xlab = "Еда",
ylab = "Средняя оценка",
legend.text = names(food[,1])
)
# столбчатая диаграмма оценок
barplot(height = colMean(food),
xlab = "Еда",
ylab = "Средняя оценка"
)
source("C:/Users/kosty/OneDrive/Рабочий стол/3 курс 6 семест/Обработка больших данных/Practical R/lab2/lab2.R")
# столбчатая диаграмма оценок
barplot(height = colMean(food),col = "steelblue",
xlab = "Еда",
ylab = "Средняя оценка"
)
barplot(height = food,col = "steelblue",
xlab = "Еда",
ylab = "Средняя оценка")
source("C:/Users/kosty/OneDrive/Рабочий стол/3 курс 6 семест/Обработка больших данных/Practical R/lab2/lab2.R")
library("xlsx")
food <- read.xlsx("C:/Users/kosty/OneDrive/Рабочий стол/3 курс 6 семест/Обработка больших данных/Practical R/lab2/food.xlsx", sheetIndex = 1)
rownames(food)<-food[,1]
name <- food[,1]
food<-food[,-1] #удаляем имена
food_name<- colnames(food)
colMax <- function(data) sapply(data, max, na.rm = TRUE) # Функция макс в каждом столбце
colMin <- function(data) sapply(data, min, na.rm = TRUE) # Функция мин в каждом столбце
colMean <- function(data) sapply(data, mean, na.rm = TRUE) # Функция среднего в каждом столбце
colMax(food) # Максимальная оценка
colMin(food) # Минимальная оценка
colMean(food) # Средняя оценка
count_score_high <- vector()
for(i in 1:ncol(food)){
count_score_high[i] <- sum(food[,i] > 7)
}
count_score_high
rbind(food_name, count_score_high) # количество людей, отдавших предпочтение >7
count_score_low <- vector()
for(i in 1:ncol(food)){
count_score_low[i] <- sum(food[,i] < 3)
}
count_score_low
rbind(food_name, count_score_low) # количество людей, отдавших предпочтение <3
sort(colMean(food),decreasing = TRUE) # рейтинг
# столбчатая диаграмма оценок
barplot(height = colMean(food),col = "steelblue",
xlab = "Еда",
ylab = "Средняя оценка"
)
hist(food)
mydata<-read.csv(file = 'C:/Users/kosty/OneDrive/Рабочий стол/3 курс 6 семест/Обработка больших данных/Practical R/lab2/food.csv')
View(food)
View(mydata)
mydata<-read.csv(file = 'C:/Users/kosty/OneDrive/Рабочий стол/3 курс 6 семест/Обработка больших данных/Practical R/lab2/food.csv',
header="logical",  sep=" ", row.names="names")
mydataframe <- read.table(ﬁle, header="logical",  sep=" ", row.names="names")
mydataframe <- read.table(file, header="logical",  sep=" ", row.names="names")
mydataframe <- read.table('food.csv', header="logical",  sep=" ", row.names="names")
mydataframe <- read.table('food.csv', header=TRUE,  sep=" ", row.names="names")
mydataframe <- read.table('food.csv', header=TRUE,  sep=" ", row.names="name")
mydataframe <- read.table('food.csv', header=TRUE,  sep=";", row.names="name")
mydataframe <- read.table('food.csv', header=TRUE,  sep=",", row.names="name")
mydataframe <- read.table('food.csv', header=TRUE,  sep=",", row.names="name")
mydataframe <- read.table('food.csv', header=TRUE,  sep=",")
View(mydataframe)
mydataframe <- read.table('food.csv', header=TRUE,  sep=";")
mydataframe <- read.table('food.csv', header=TRUE,  sep=";", row.names = "Name")
mydataframe[order(mydataframe$Cezar,mydataframe$Kotleta.s.pure),]
mydataframe[order(mydataframe$Cezar,mydataframe$Kotleta.s.pure,mydataframe$Makaroni),]
# Сформировать отдельные наборы данных по одинаковому признаку
newdata <- subset(mydataframe, Cezar>=7)
View(newdata)
# Сформировать отдельные наборы данных по одинаковому признаку
newdata <- subset(mydataframe, Cezar>=9)
# Оценка за Котлюту и Оливье
newdata2 <- subset(mydataframe, Kotleta.s.pure > 7 & Olive > 7)
View(newdata2)
# Оценка за Бургер < 4, Pizza > 9, Makaroni < 8
newdata2 <- subset(mydataframe, Burger < 4 & Pizza > 9 & Makaroni < 8)
# Оценка за Бургер < 4, Pizza > 9, Makaroni < 8
newdata3 <- subset(mydataframe, Burger < 4 & Pizza > 9 & Makaroni < 8)
View(newdata2)
o
# Оценка за Бургер <= 6, Pizza >= 8, Makaroni < 8
newdata3 <- subset(mydataframe, Burger <= 6 & Pizza >= 8 & Makaroni < 8)
View(newdata2)
View(newdata3)
hist(food&Makaroni)
hist(food$Makaroni)
hist(food$Makaroni,food$Kotleta.s.pure)
# столбчатая диаграмма оценок
barplot(height = colMean(food),col = "steelblue",
xlab = "Еда",
ylab = "Средняя оценка"
)
hist(colMean(food))
# столбчатая диаграмма оценок
barplot(height = colMean(food),col = "steelblue",
xlab = "Еда",
ylab = "Средняя оценка"
)
hist(colMean(food))
# Дескриптивный анализ
sd <- apply(mdf,sd,na.rm = TRUE)
# Импорт из csv
mdf <- read.table('food.csv', header=TRUE,  sep=";", row.names = "Name")
# Дескриптивный анализ
sd <- apply(mdf,sd,na.rm = TRUE)
# Дескриптивный анализ
sds <- apply(mdf,sd,na.rm = TRUE)
# Дескриптивный анализ
sd <- sapply(mdf,sd,na.rm = TRUE)
# Дескриптивный анализ
summary <- sapply(mdf, summary, na.rm = TRUE)
View(summary)
# Дескриптивный анализ
summaryd <- sapply(mdf, summary, na.rm = TRUE)
sdv <- sapply(mdf,sd,na.rm = TRUE) # Стандартное отклонение
varv < sapply(mdf,var,na.rm = TRUE) # Дисперсия
IQRv <- sapply(mdf, IQR, na.rm = TRUE) # Межквартильный размах
varv < sapply(mdf,var,na.rm = TRUE) # Дисперсия
varv <- sapply(mdf,var,na.rm = TRUE) # Дисперсия
IQRv <- sapply(mdf, IQR, na.rm = TRUE) # Межквартильный размах
rbind(summaryd,sdv,varv,IQRv)
# Дескриптивный анализ
data <- sapply(mdf, summary, na.rm = TRUE)
sd <- sapply(mdf,sd,na.rm = TRUE) # Стандартное отклонение
var <- sapply(mdf,var,na.rm = TRUE) # Дисперсия
IQR <- sapply(mdf, IQR, na.rm = TRUE) # Межквартильный размах
rbind(data,sd,var,IQR)
dim(newdata1) # размерность
# Сформировать отдельные наборы данных по одинаковому признаку
# Оценка за цезарь больше 9
newdata1 <- subset(mydataframe, Cezar>=9)
dim(newdata1) # размерность
source("C:/Users/kosty/OneDrive/Рабочий стол/3 курс 6 семест/Обработка больших данных/Practical R/lab2/lab2.R")
library("xlsx")
food <- read.xlsx("C:/Users/kosty/OneDrive/Рабочий стол/3 курс 6 семест/Обработка больших данных/Practical R/lab2/food.xlsx", sheetIndex = 1)
rownames(food)<-food[,1]
name <- food[,1]
food<-food[,-1] #удаляем имена
food_name<- colnames(food)
colMax <- function(data) sapply(data, max, na.rm = TRUE) # Функция макс в каждом столбце
colMin <- function(data) sapply(data, min, na.rm = TRUE) # Функция мин в каждом столбце
colMean <- function(data) sapply(data, mean, na.rm = TRUE) # Функция среднего в каждом столбце
# Функция моды
getmode <- function(vector) {
uniqv <- unique(vector) # Находим уникальные элементы вектора
uniqv[which.max(tabulate(match(vector, uniqv)))] # Каждому элементу ставим соответствие его повторений
}
colMax(food) # Максимальная оценка
colMin(food) # Минимальная оценка
colMean(food) # Средняя оценка
count_score_high <- vector()
for(i in 1:ncol(food)){
count_score_high[i] <- sum(food[,i] > 7)
}
count_score_high
rbind(food_name, count_score_high) # количество людей, отдавших предпочтение >7
count_score_low <- vector()
for(i in 1:ncol(food)){
count_score_low[i] <- sum(food[,i] < 3)
}
count_score_low
rbind(food_name, count_score_low) # количество людей, отдавших предпочтение <3
sort(colMean(food),decreasing = TRUE) # рейтинг
# столбчатая диаграмма оценок
barplot(height = colMean(food),col = "steelblue",
xlab = "Еда",
ylab = "Средняя оценка"
)
# Гистограмма средних оценок
hist(colMean(food))
boxplot(colMean(food),
main = "Среднии оценки",
ylab = "Средняя оценка",
col=rainbow(10))
boxplot(food[,c(1:10)],
main = "Оценки еды",
xlab = "Блюда",
ylab = "Оценка",
col = rainbow(10))
# Гистограмма количество оценок
hist(data.matrix(na.omit(food)),
breaks = 10,
main = "Гистограмма",
xlab = "Оценка",
ylab = "Количество",
col = rainbow(10))
# Импорт из csv
mdf <- read.table('food.csv', header=TRUE,  sep=";", row.names = "Name")
# Дескриптивный анализ
data <- sapply(mdf, summary, na.rm = TRUE)
sd <- sapply(mdf,sd,na.rm = TRUE) # Стандартное отклонение
var <- sapply(mdf,var,na.rm = TRUE) # Дисперсия
IQR <- sapply(mdf, IQR, na.rm = TRUE) # Межквартильный размах
mode <- sapply(mdf, getmode) # Мода
rbind(data, sd, var, IQR, mode)
# Сортировка по 3 столбцам
mdf[order(mdf$Cezar,mdf$Kotleta.s.pure,mdf$Makaroni),]
# Сформировать отдельные наборы данных по одинаковому признаку
# Оценка за цезарь больше 9
newdata1 <- subset(mdf, Cezar>=9)
dim(newdata1) # размерность
hist(data.matrix(na.omit(newdata1)),
breaks = 10,
main = "Гистограмма",
xlab = "Оценка",
ylab = "Количество",
col = rainbow(10))
boxplot(newdata1[,c(1:10)],
main = "Оценки еды",
xlab = "Блюда",
ylab = "Оценка",
col = rainbow(10))
# Оценка за Котлюту и Оливье
newdata2 <- subset(mdf, Kotleta.s.pure > 7 & Olive > 7)
dim(newdata2) # размерность
hist(data.matrix(na.omit(newdata2)),
breaks = 10,
main = "Гистограмма",
xlab = "Оценка",
ylab = "Количество",
col = rainbow(10))
boxplot(newdata2[,c(1:10)],
main = "Оценки еды",
xlab = "Блюда",
ylab = "Оценка",
col = rainbow(10))
# Оценка за Бургер <= 6, Pizza >= 8, Makaroni < 8
newdata3 <- subset(mdf, Burger <= 6 & Pizza >= 8 & Makaroni < 8)
dim(newdata3) # размерность
hist(data.matrix(na.omit(newdata3)),
breaks = 10,
main = "Гистограмма",
xlab = "Оценка",
ylab = "Количество",
col = rainbow(10))
boxplot(newdata3[,c(1:10)],
main = "Оценки еды",
xlab = "Блюда",
ylab = "Оценка",
col = rainbow(10))
# столбчатая диаграмма оценок
barplot(height = colMean(food),col = "steelblue",
xlab = "Еда",
ylab = "Средняя оценка"
)
# Гистограмма средних оценок
hist(colMean(food))
boxplot(food[,c(1:10)],
main = "Оценки еды",
xlab = "Блюда",
ylab = "Оценка",
col = rainbow(10))
source("C:/Users/kosty/OneDrive/Рабочий стол/3 курс 6 семест/Обработка больших данных/Practical R/lab2/lab2.R")
