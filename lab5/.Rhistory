library(rvest)
# Считывание всех музеев со страницы
url_museum <- read_html("https://tonkosti.ru/Музеи_Санкт-Петербурга") # Считали ссылку
select_museum <- "places-list__item-header" # Название класса хранящий имя музея
select_museum_address <- "div.places-list__address--rc"# Класс хранящий адреса музеев
select_museum_url <- ".places-list__item-img--rc"
museums_names <- html_nodes(url_museum, select_museum) %>% html_text() %>% as.array() # Считали названия всех музеев
museums_adress <- html_nodes(url_museum, select_museum_address) %>% html_text() %>% as.array() # Считали адреса всех музеев
museums_urls <- html_nodes(url_museum, select_museum_url) %>% html_text("href") %>% as.array()
museums_names
museums_adress
install.packages("rvest")
library(rvest)
# Считывание всех музеев со страницы
url_museum <- read_html("https://tonkosti.ru/Музеи_Санкт-Петербурга") # Считали ссылку
select_museum <- "places-list__item-header" # Название класса хранящий имя музея
select_museum_address <- "div.places-list__address--rc"# Класс хранящий адреса музеев
select_museum_url <- ".places-list__item-img--rc"
museums_names <- html_nodes(url_museum, select_museum) %>% html_text() %>% as.array() # Считали названия всех музеев
museums_adress <- html_nodes(url_museum, select_museum_address) %>% html_text() %>% as.array() # Считали адреса всех музеев
museums_urls <- html_nodes(url_museum, select_museum_url) %>% html_text("href") %>% as.array()
museums_names
museums_adress
install.packages("rvest")
select_museum <- "places-list__item-header" # Название класса хранящий имя музея
select_museum_address <- "div.places-list__address--rc"# Класс хранящий адреса музеев
select_museum_url <- ".places-list__item-img--rc"
museums_names <- html_nodes(url_museum, select_museum) %>% html_text() %>% as.array() # Считали названия всех музеев
museums_adress <- html_nodes(url_museum, select_museum_address) %>% html_text() %>% as.array() # Считали адреса всех музеев
museums_names <- html_nodes(url_museum, select_museum) %>% html_text() %>% as.array() # Считали названия всех музеев
museums_adress <- html_nodes(url_museum, select_museum_address) %>% html_text() %>% as.array() # Считали адреса всех музеев
select_museum <- "places-list__item-header" # Название класса хранящий имя музея
museums_names <- html_nodes(url_museum, select_museum) %>% html_text() %>% as.array() # Считали названия всех музеев
museums_adress <- html_nodes(url_museum, select_museum_address) %>% html_text() %>% as.array() # Считали адреса всех музеев
select_museum <- "h3.places-list__item-header" # Название класса хранящий имя музея
museums_names <- html_nodes(url_museum, select_museum) %>% html_text() %>% as.array() # Считали названия всех музеев
select_museum_url <- ".places-list__item-img .places-list__item-img--rc"
museums_urls <- html_nodes(url_museum, select_museum_url) %>% html_text("href") %>% as.array()
select_museum_url <- "a.places-list__item-img"
museums_urls <- html_nodes(url_museum, select_museum_url) %>% html_text("href") %>% as.array()
museums_urls <- html_nodes(url_museum, select_museum_url) %>% html_text() %>% as.array()
museums_urls <- html_nodes(url_museum, select_museum_url) %>% html_text() %>% as.array()
museums_urls <- html_nodes(url_museum, select_museum_url) %>% html_attr("href") %>% as.array()
select_museum_url <- ".places-list__item-header"
museums_urls <- html_nodes(url_museum, select_museum_url) %>% html_attr("href") %>% as.array()
select_museum_url <- "h3.places-list__item-header"
museums_urls <- html_nodes(url_museum, select_museum_url) %>% html_attr("href") %>% as.array()
select_museum_url <- ".places-list__item-img .places-list__item-img--rc"
museums_urls <- html_nodes(url_museum, select_museum_url) %>% html_attr("href") %>% as.array()
select_museum_url <- ".places-list__item-img"
museums_urls <- html_nodes(url_museum, select_museum_url) %>% html_attr("href") %>% as.array()
select_museum_url <- "a.places-list__item-img"
install.packages("rvest")
install.packages("rvest")
museums_urls <- html_nodes(url_museum, select_museum_url) %>% html_attr("href") %>% as.array()
select_museum_url <- "div.places-list__item-img"
museums_urls <- html_nodes(url_museum, select_museum_url) %>% html_attr("href") %>% as.array()
select_museum_url <- ".places-list__item-img"
museums_urls <- html_nodes(url_museum, select_museum_url) %>% html_attr("href") %>% as.array()
museums_urls <- museums_urls.uniq
museums_urls <- unique(museums_urls)
full_museums_address <- paste0("https://tonkosti.ru", museums_urls)
museum <- data.frame(museums_names, museums_adress, museums_urls) # Создание базы музеев
View(museum)
museum <- data.frame(museums_names, museums_adress, full_museums_address) # Создание базы музеев
museum <- data.frame("Имя музея" = museums_names, museums_adress, full_museums_address) # Создание базы музеев
museum <- data.frame("Музей" = museums_names, "Адрес" = museums_adress, "Веб страница" =  full_museums_address) # Создание базы музеев
library(rvest)
# Задание с музеем
# Считывание всех музеев со страницы
url_museum <- read_html("https://tonkosti.ru/Музеи_Санкт-Петербурга") # Считали ссылку
select_museum <- "h3.places-list__item-header" # Название класса хранящий имя музея
select_museum_address <- "div.places-list__address--rc"# Класс хранящий адреса музеев
select_museum_url <- ".places-list__item-img"
museums_names <- html_nodes(url_museum, select_museum) %>% html_text() %>% as.array() # Считали названия всех музеев
museums_adress <- html_nodes(url_museum, select_museum_address) %>% html_text() %>% as.array() # Считали адреса всех музеев
museums_urls <- html_nodes(url_museum, select_museum_url) %>% html_attr("href") %>% as.array()
museums_names
museums_adress
museums_urls <- unique(museums_urls) # Удалили повторения
full_museums_address <- paste0("https://tonkosti.ru", museums_urls) # Добавили полный адрес музея
museum <- data.frame("Музей" = museums_names, "Адрес" = museums_adress, "Веб страница" =  full_museums_address) # Создание базы музеев
View(museum)
select_country <- "cityOrCountryInIndicesTable" #Название класса хранящий имена стран
country_names <- html_nodes(url_museum, select_country) %>% html_text() %>% as.array() # Считали названия всех музеев
select_country <- ".cityOrCountryInIndicesTable" #Название класса хранящий имена стран
country_names <- html_nodes(url_museum, select_country) %>% html_text() %>% as.array() # Считали названия всех музеев
url_country_rating <- read_html("https://www.numbeo.com/quality-of-life/rankings_by_country.jsp?title=2021")
select_country <- ".cityOrCountryInIndicesTable" #Название класса хранящий имена стран
country_names <- html_nodes(url_museum, select_country) %>% html_text() %>% as.array() # Считали названия всех музеев
country_names <- html_nodes(url_museum, select_country) %>% html_text() %>% as.array() # Считали названия всех музеев
country_names <- html_nodes(url_country_rating, select_country) %>% html_text() %>% as.array() # Считали названия всех музеев
select_rat <- "td"
country_names <- html_nodes(url_country_rating, select_rat) %>% html_text() %>% as.array() # Считали рейтинги
country_rat <- html_nodes(url_country_rating, select_rat) %>% html_text() %>% as.array() # Считали рейтинги
country_names <- html_nodes(url_country_rating, select_country) %>% html_text() %>% as.array() # Считали имена стран с таблицы
country_rat
country_rat <- country_rat[4:]
country_rat <- country_rat[-c(1,2,3)]
contry_rat <- matrix(country_rat, ncol = 10, nrow = 83)
View(contry_rat)
contry_rat <- matrix(country_rat, ncol = 11, nrow = 83)
contry_rat <- matrix(country_rat, ncol = 10, nrow = 83)
contry_rat <- matrix(country_rat, ncol = 10, nrow = 83, byrow = TRUE)
contry_rat <- matrix(country_rat, ncol = 11, nrow = 83, byrow = TRUE)
country_rat <- contry_rat[,-11]
country_rat <- contry_rat[,-11]
country_rat <- contry_rat[-11,]
contry_rat <- matrix(country_rat, ncol = 11, nrow = 83, byrow = TRUE)
country_rat <- contry_rat[-11,]
View(country_rat)
#country_names <- html_nodes(url_country_rating, select_country) %>% html_text() %>% as.array() # Считали имена стран с таблицы
country_rat <- html_nodes(url_country_rating, select_rat) %>% html_text() %>% as.array() # Считали рейтинги
country_rat <- country_rat[-c(1,2,3)]
contry_rat <- matrix(country_rat, ncol = 11, nrow = 83, byrow = TRUE)
View(contry_rat)
contry_rat <- contry_rat[,-c(11)]
# Создание базы
rating <- data.frame("Страна" = contry_rat[,1], "Индекс качества жизни" = country_rat[,2] )
# Создание базы
rating <- data.frame("Страна" = contry_rat[,c(1)], "Индекс качества жизни" = country_rat[,c(2)] )
#country_names <- html_nodes(url_country_rating, select_country) %>% html_text() %>% as.array() # Считали имена стран с таблицы
country_rat <- html_nodes(url_country_rating, select_rat) %>% html_text() %>% as.array() # Считали рейтинги
country_rat <- country_rat[-c(1,2,3)] # Убрали лишние из вектора
contry_rat <- matrix(country_rat, ncol = 11, nrow = 83, byrow = TRUE) # Создание матрицы
View(contry_rat)
contry_rat <- contry_rat[,-c(11)] # Удаление пустого столбца
# Создание базы
rating <- data.frame("Страна" = contry_rat[,c(1)], "Индекс качества жизни" = country_rat[,c(2)] )
# Создание базы
rating <- data.frame(contry_rat )
View(rating)
# Создание базы
rating <- data.frame(contry_rat, row.names = c("Страна", "Индекс качества жизни", "Индекс покупательной способности", "Индекс безопасности",
"Индекс здравоохранения", "Индекс стоимости жизни", "Соотношение цены на недвижимости к доходу",
"Индекс времени в пути в пробках", "Индекс загрезнения", "Климатический индекс") )
rownames(rating, colnames = c("Страна", "Индекс качества жизни", "Индекс покупательной способности", "Индекс безопасности",
"Индекс здравоохранения", "Индекс стоимости жизни", "Соотношение цены на недвижимости к доходу",
"Индекс времени в пути в пробках", "Индекс загрезнения", "Климатический индекс"))
names(rating) <- c("Страна", "Индекс качества жизни", "Индекс покупательной способности", "Индекс безопасности",
"Индекс здравоохранения", "Индекс стоимости жизни", "Соотношение цены на недвижимости к доходу",
"Индекс времени в пути в пробках", "Индекс загрезнения", "Климатический индекс")
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
rating_my <- rating(c(2,15,20,43,45),)
# Канада, США, Турция, Греция, Дания - мои страны
# Составим таблицу из моих стран
rating_my <- rating[c(2,15,20,43,45),]
View(rating_my)
# Имена столбцов
names(rating) <- c("Номер", "Страна", "Индекс качества жизни", "Индекс покупательной способности", "Индекс безопасности",
"Индекс здравоохранения", "Индекс стоимости жизни", "Соотношение цены на недвижимости к доходу",
"Индекс времени в пути в пробках", "Индекс загрезнения", "Климатический индекс")
